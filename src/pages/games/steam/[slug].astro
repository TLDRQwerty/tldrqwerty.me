---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";

export async function getStaticPaths() {
  const games = await getCollection("steam");

  return games.map((game) => ({
    params: { slug: game.data.slug },
    props: { game },
  }));
}

const { game } = Astro.props;

const achievements = game.data.achievements.sort(
  (a, b) => b.unlocktime - a.unlocktime,
);
const totalEarned = achievements.filter((a) => a.achieved);
---

<Layout>
  {
    game.data.header_art && (
      <img
        src={game.data.header_art}
        alt="Game header art"
        width={460}
        height={215}
        class="m-auto aspect-auto flex-1"
      />
    )
  }
  <h1>{game.data.title}</h1>

  <a
    href={`https://store.steampowered.com/app/${game.data.appid}`}
    target="_blank"
  >
    View on Steam
  </a>

  <div class="flex flex-row gap-4">
    <h2>Achievements</h2><span
      >({totalEarned.length}/{achievements.length})</span
    >
  </div>
  <ul class="space-y-4">
    {
      achievements.map((achievement) => (
        <li
          class:list={[
            "flex flex-col gap-2 rounded-lg border p-4 text-black",
            {
              "bg-red-400 text-white": achievement.achieved,
            },
          ]}
        >
          <div class="flex flex-row justify-between">
            <p>{achievement.name}</p>
            {achievement.achieved ? (
              <p>
                {new Intl.DateTimeFormat("en-GB", {
                  dateStyle: "short",
                }).format(new Date(achievement.unlocktime * 1000))}
              </p>
            ) : null}
          </div>
          <p>{achievement.description}</p>
        </li>
      ))
    }
  </ul>
</Layout>
